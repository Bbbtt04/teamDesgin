// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 用户模型
model User {
  id         String     @id @default(uuid())
  username   String     @unique
  password   String
  realName   String
  status     Int
  department String?
  phone      String?
  createTime DateTime   @default(now())
  userRoles  UserRole[]
}

// 角色模型
model Role {
  id              String           @id @default(uuid())
  name            String           @unique
  description     String
  userRoles       UserRole[]
  rolePermissions RolePermission[]
}

// 权限模型
model Permission {
  id              String           @id @default(uuid())
  name            String           @unique
  rolePermissions RolePermission[]
}

// 用户-角色关联
model UserRole {
  id     String @id @default(uuid())
  userId String
  roleId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@unique([userId, roleId])
}

// 角色-权限关联
model RolePermission {
  id           String     @id @default(uuid())
  roleId       String
  permissionId String
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@unique([roleId, permissionId])
}

// 大田模型
model Field {
  id         String         @id @default(uuid())
  name       String
  address    String
  manager    String
  area       Float
  areaUnit   String
  status     Int
  remark     String?
  createTime DateTime       @default(now())
  updateTime DateTime       @updatedAt
  sections   FieldSection[]
  activities Activity[]
  farmTrends FarmTrend[]
}

// 大田分区模型
model FieldSection {
  id         String     @id @default(uuid())
  fieldId    String
  name       String
  area       Float
  areaUnit   String
  cropType   String?
  status     Int
  remark     String?
  createTime DateTime   @default(now())
  updateTime DateTime   @updatedAt
  field      Field      @relation(fields: [fieldId], references: [id], onDelete: Cascade)
  activities Activity[]
}

// 农事活动模型
model Activity {
  id                String        @id @default(uuid())
  fieldId           String
  sectionId         String?
  title             String
  activityType      Int
  description       String?
  startTime         DateTime
  endTime           DateTime?
  status            Int
  executor          String
  materials         Json? // 存储材料数组
  dataSource        Int
  weatherInfo       String?
  effectDescription String?
  images            Json? // 存储图片URL数组
  createTime        DateTime      @default(now())
  updateTime        DateTime      @updatedAt
  remark            String?
  field             Field         @relation(fields: [fieldId], references: [id], onDelete: Cascade)
  section           FieldSection? @relation(fields: [sectionId], references: [id], onDelete: SetNull)
}

// 设备模型
model Equipment {
  id                  String      @id @default(uuid())
  name                String
  type                Int
  model               String
  serialNumber        String      @unique
  status              Int
  location            String?
  fieldId             String?
  sectionId           String?
  installTime         DateTime?
  lastMaintenanceTime DateTime?
  nextMaintenanceTime DateTime?
  description         String?
  manufacturer        String?
  purchaseDate        DateTime?
  createTime          DateTime    @default(now())
  updateTime          DateTime    @updatedAt
  farmTrends          FarmTrend[]
}

// 农场动态模型
model FarmTrend {
  id          String     @id @default(uuid())
  avatar      String // 头像图标
  title       String // 标题(人名)
  content     String // 内容
  date        DateTime // 日期时间
  fieldId     String?
  equipmentId String?
  createTime  DateTime   @default(now())
  updateTime  DateTime   @updatedAt
  field       Field?     @relation(fields: [fieldId], references: [id], onDelete: SetNull)
  equipment   Equipment? @relation(fields: [equipmentId], references: [id], onDelete: SetNull)
}
